plugins {
    id 'checkstyle'
    id 'java'
    id 'io.freefair.lombok' version '5.0.1'
}

group = 'com.provectus'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '8'

repositories {
    mavenLocal()
    mavenCentral()
}

configurations {
    // configuration that holds jars to include in the jar
    extraLibs
}

ext {
    sparkVersion = '3.1.2'
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-webflux:2.5.0"
    implementation "com.google.cloud.spark:spark-bigquery_2.12:0.21.1"
    implementation "com.google.cloud.spark:spark-bigquery-with-dependencies_2.12:0.21.1"
    implementation "org.apache.spark:spark-core_2.12:${sparkVersion}"
    implementation "org.apache.spark:spark-sql_2.12:${sparkVersion}"
    implementation "org.apache.spark:spark-hive_2.12:${sparkVersion}"
    extraLibs group: 'org.opendatadiscovery', name: 'oddrn-generator-java', version: '0.1.7'
    extraLibs group: 'org.opendatadiscovery', name: 'ingestion-contract-client', version: '0.1.4'
    extraLibs group: 'com.github.jsqlparser', name: 'jsqlparser', version: '4.2'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.1'
    testImplementation 'org.mockito:mockito-core:2.19.0'
    configurations.compile.extendsFrom(configurations.extraLibs)
}

checkstyle {
    configFile = project(':').file('config/checkstyle/checkstyle.xml')
    configProperties = ["suppressionFile": project(':').file('config/checkstyle/suppressions.xml')]
    ignoreFailures = false
    maxWarnings = 0
}

task buildlessCheckstyleMain(type: Checkstyle) {
    configFile = project(':').file('config/checkstyle/checkstyle.xml')
    source 'src/main/java'
    classpath = files()
    configProperties = ["suppressionFile": project(':').file('config/checkstyle/suppressions.xml')]
    ignoreFailures = false
    maxWarnings = 0
}

task buildlessCheckstyleTest(type: Checkstyle) {
    configFile = project(':').file('config/checkstyle/checkstyle.xml')
    source 'src/test/java'
    classpath = files()
    configProperties = ["suppressionFile": project(':').file('config/checkstyle/suppressions.xml')]
    ignoreFailures = false
    maxWarnings = 0
}

tasks.withType(Checkstyle) {
    reports {
        xml.enabled false
        html.enabled false
    }
}

test {
    useJUnitPlatform()
}

jar {
    from {
        configurations.extraLibs.collect { it.isDirectory() ? it : zipTree(it) }
    }
    manifest {
        attributes(
                "Premain-Class": 'org.opendatadiscovery.adapters.spark.SparkAgent',
                "Agent-Class": 'org.opendatadiscovery.adapters.spark.SparkAgent'
        )
    }
    zip64 true
}