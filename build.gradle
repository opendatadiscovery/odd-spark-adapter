plugins {
    id 'java'
}

group = 'org.opendatadiscovery'
version = "${version != 'unspecified' ? version : file('VERSION').text}"
sourceCompatibility = '8'

repositories {
    mavenLocal()
    mavenCentral()
}

configurations {
    // configuration that holds jars to include in the jar
    // TODO: why do we need that?
    // TODO: won't 'implementation' be enough?
    extraLibs
}

configurations.all {
    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'

    resolutionStrategy {
        force "com.fasterxml.jackson:jackson-bom:2.13.4"
    }
}

dependencies {
    implementation("org.springframework.boot:spring-boot-starter-webflux:2.5.0")

    compileOnly "org.apache.spark:spark-core_2.12:3.3.1"
    compileOnly "org.apache.spark:spark-sql_2.12:3.3.1"
    compileOnly "org.apache.spark:spark-hive_2.12:3.3.1"
    compileOnly "net.snowflake:spark-snowflake_2.12:2.11.0-spark_3.3"
    compileOnly "org.apache.spark:spark-sql-kafka-0-10_2.12:3.3.1"

    extraLibs "org.opendatadiscovery:oddrn-generator-java:0.1.15"
    extraLibs "org.opendatadiscovery:ingestion-contract-client:0.1.19"
    extraLibs "com.github.jsqlparser:jsqlparser:4.2"
    extraLibs 'commons-validator:commons-validator:1.7'

    compileOnly "org.projectlombok:lombok:1.18.24"
    annotationProcessor "org.projectlombok:lombok:1.18.24"

    configurations.compileOnly.extendsFrom(configurations.extraLibs)
}

test {
    useJUnitPlatform()
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from {
        configurations.extraLibs.collect { it.isDirectory() ? it : zipTree(it) }
    }

    zip64 true
}